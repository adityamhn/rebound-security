version: '3'
services:
  mariadb:
    image: mariadb:11
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - ./attacklogdata:/var/lib/mysql
      - ./initdb.sql:/docker-entrypoint-initdb.d/init.sql
      - ./services/cowrie/cowrie-sql:/cowrie-sql
    # healthcheck:
    #   test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
    #   start_period: 1m
    #   interval: 1m
    #   timeout: 5s
    #   retries: 3
    
  ssh_honeypot:
    image: cowrie/cowrie:latest
    restart: always
    ports:
      - "2222:2222"  # Map Cowrie's SSH port to the host
    volumes:
      - ./services/cowrie/cowrie.cfg:/cowrie/cowrie-git/etc/cowrie.cfg 
      - ./services/cowrie/logs:/opt/cowrie/log  # Store logs on the host machine
      - ./services/cowrie/mysql.py:/cowrie/cowrie-git/src/cowrie/output/mysql.py
  # mongodb_honeyproxy:
  #   build: ./services/mongodb_honeyproxy  # Path to the directory where the Dockerfile for MongoDB-HoneyProxy is located
  #   ports:
  #     - "27017:27017"  # Expose MongoDB proxy port
  #   volumes:
  #     - ./mongodb_honeyproxy/data:/data/db  # Persist MongoDB data
  #   depends_on:
  #     - ssh_honeypot  # Ensure SSH honeypot starts before MongoDB-HoneyProxy